/!* keyword: bnm_divider */
	bnm_divider => nrel_main_ru_idtf: [разделитель метаязыка Бэкуса-Наура] ;;
	bnm_divider <= nrel_subdividing:
	{
		bnm_divider_variable;
		bnm_divider_absent_construction;
		bnm_divider_repeat_construction;
		bnm_divider_alternative_bracket;
		bnm_divider_alternative;
		bnm_divider_assignment
	};;
	
	/!* keyword: bnm_divider_absent_construction */
bnm_divider_absent_construction => nrel_main_ru_idtf: 
	[скобки, ограничивающие конструкцию, которая может отсутствовать] ;;
bnm_divider_absent_construction <= nrel_inclusion:
	bnm_divider;;
bnm_divider_absent_construction <= nrel_representation_scs_editor:
{
	[\["];
	["\]]
};;
bnm_divider_absent_construction <= nrel_using_example:
	[
		<" имя sc-элемента "> <" изображение sc-коннектора "> {" \[" {" <" уточнение типа модификатора "> + "} "\] <" модификатор коннектора "> : "} <" имя sc-элемента "> ;;
	];;
	
	/!* keyword: bnm_divider_alternative */
bnm_divider_alternative => nrel_main_ru_idtf: 
	[разделитель альтернатив] ;;
bnm_divider_alternative <= nrel_inclusion:
	bnm_divider;;
bnm_divider_alternative <= nrel_explanation:
	[Данный разделитель разделяет альтернативы, перечисленные в рамках одной пары скобок ограничения альтернатив];;
bnm_divider_alternative <= nrel_representation_scs_editor:
	[||];;
bnm_divider_alternative <= nrel_using_example:
	[
		<" имя sc-элемента "> ::= (" <" атомарное имя sc-элемента "> | <" неатомарное имя sc-элемента "> ")
		<" неатомарное имя sc-элемента "> ::= ( <" имя sc-элемента "> <" изображение коннектора "> <" имя sc-элемента "> ) \[" суффикс "\]
	];;
	
/!* keyword: bnm_divider_alternative_bracket */
bnm_divider_alternative_bracket => nrel_main_ru_idtf: 
	[скобки, ограничивающие список альтернатив.] ;;
bnm_divider_alternative_bracket <= nrel_inclusion:
	bnm_divider;;
bnm_divider_alternative_bracket <= nrel_explanation:
	[Выражение, ограниченное этими скобками, обозначает какую-либо одну из перечисленных альтернатив];;
bnm_divider_alternative_bracket <= nrel_representation_scs_editor:
{
	[("];
	[")]
};;
bnm_divider_alternative_bracket <= nrel_using_example:
	[
		<" имя sc-элемента "> ::= (" <" атомарное имя sc-элемента "> | <" неатомарное имя sc-элемента "> ")
		<" неатомарное имя sc-элемента "> ::= ( <" имя sc-элемента "> <" изображение коннектора "> <" имя sc-элемента "> ) \[" суффикс "\]
	];;
	
/!* keyword: bnm_divider_assignment */ 
bnm_divider_assignment => nrel_main_ru_idtf: 
	[разделитель присваивания] ;;
bnm_divider_assignment <= nrel_inclusion:
	bnm_divider;;
bnm_divider_assignment <= nrel_explanation:
	[Данный разделитель задает операцию "присваивания" левой части правила Бэкуса-Наура, конструкции, описанной в правой его части];;
bnm_divider_assignment <= nrel_representation_scs_editor:
	[::=];;
bnm_divider_assignment <= nrel_using_example:
	[
		<" имя sc-элемента "> ::= (" <" атомарное имя sc-элемента "> | <" неатомарное имя sc-элемента "> ")
		<" неатомарное имя sc-элемента "> ::= ( <" имя sc-элемента "> <" изображение коннектора "> <" имя sc-элемента "> ) \[" суффикс "\]
	];;
	
/!* keyword: bnm_divider_repeat_construction */
bnm_divider_repeat_construction => nrel_main_ru_idtf: 
	[скобки, ограничивающие конструкцию, которая может повторяться сколько угодно раз] ;;
bnm_divider_repeat_construction <= nrel_inclusion:
	bnm_divider;;
bnm_divider_repeat_construction <= nrel_representation_scs_editor:
{
	[{"];
	["}]
};;
bnm_divider_repeat_construction <= nrel_using_example:
	[
		<" имя sc-элемента "> <" изображение sc-коннектора "> {" \[" {" <" уточнение типа модификатора "> + "} "\] <" модификатор коннектора "> : "} <" имя sc-элемента "> ;;
	];;

/!* keyword: bnm_divider_variable */
bnm_divider_variable => nrel_main_ru_idtf: 
	[скобки, ограничивающие лингвистические переменные] ;;
bnm_divider_variable <= nrel_inclusion:
	bnm_divider;;
bnm_divider_variable <= nrel_representation_scs_editor:
{
	[<"];
	[">]
};;
bnm_divider_variable <= nrel_using_example:
	[
		<" sc.s-коннектор ">
	];;